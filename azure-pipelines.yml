# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

jobs:
#  - job: ubuntu_16_04
#    displayName: 'Build - Ubuntu 16.04'
#    continueOnError: false
#    pool:
#      vmImage: 'Ubuntu 16.04'
#    workspace:
#      clean: all
#    steps:
#      - script: |
#          sudo apt-get install libssl-dev -y
#        displayName: 'Install - openssl'
#      - script: |
#          mkdir build
#      - script: |
#          git clone https://github.com/oatpp/oatpp
#          mkdir -p oatpp/build
#        displayName: 'Checkout - oatpp'
#        workingDirectory: build
#      - script: |
#          cmake -DOATPP_BUILD_TESTS=OFF ..
#          sudo make install -j 2
#        displayName: 'Build - oatpp'
#        workingDirectory: build/oatpp/build
#      - script: |
#          cmake ..
#          make
#        displayName: 'Build - module'
#        workingDirectory: build
#      - script: |
#          make test ARGS="-V"
#        displayName: 'Test'
#        workingDirectory: build

#  - job: macOS
#    displayName: 'Build - macOS'
#    continueOnError: false
#    pool:
#      vmImage: 'macOS-10.14'
#    workspace:
#      clean: all
#    steps:
#      - script: |
#          brew install openssl
#        displayName: 'Install - openssl'
#      - script: |
#          mkdir build
#      - script: |
#          git clone https://github.com/oatpp/oatpp
#          mkdir -p oatpp/build
#        displayName: 'Checkout - oatpp'
#        workingDirectory: build
#      - script: |
#          cmake -DOATPP_BUILD_TESTS=OFF ..
#          sudo make install -j 2
#        displayName: 'Build - oatpp'
#        workingDirectory: build/oatpp/build
#      - script: |
#          cmake ..
#          make
#        displayName: 'Build - module'
#        workingDirectory: build
#      - script: |
#          make test ARGS="-V"
#        displayName: 'Test'
#        workingDirectory: build

  - job: windows
    displayName: 'Build - Windows'
    continueOnError: false
    pool:
      vmImage: 'windows-latest'
    workspace:
      clean: all
    steps:
      - script: |
          MD build
          curl -o build/nasm_pkg.exe https://www.nasm.us/pub/nasm/releasebuilds/2.15.05/win64/nasm-2.15.05-installer-x64.exe
          build/nasm_pkg.exe
#      - task: ExtractFiles@1
#        inputs:
#          archiveFilePatterns: 'build/*.zip'
#          cleanDestinationFolder: false
#          overwriteExistingFiles: true
      - script: |
          git clone -b "OpenSSL_1_1_1-stable" https://github.com/openssl/openssl.git --depth 1
        displayName: 'Checkout - OpenSSL'
        workingDirectory: build
      - script: |
          perl Configure VC-WIN64A
          nmake
          nmake install
        displayName: 'Install - openssl'
        workingDirectory: build\openssl
      - script: |
          git clone https://github.com/oatpp/oatpp
          MD oatpp\build
        displayName: 'Checkout - oatpp'
        workingDirectory: build
      - script: |
          cmake -DOATPP_BUILD_TESTS=OFF ..
          cmake --build . --target INSTALL
        displayName: 'Build - oatpp'
        workingDirectory: build\oatpp\build
      - script: |
          cmake ..
          cmake --build .
        displayName: 'Build Module'
        workingDirectory: build
      - script: |
          module-tests.exe
        displayName: 'Test'
        workingDirectory: build\test\Debug\
